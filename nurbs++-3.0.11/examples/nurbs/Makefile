# Makefile.in generated by automake 1.6.1 from Makefile.am.
# examples/nurbs/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/bash

srcdir = .
top_srcdir = ../..

prefix = /home/gmillet/Dep/compiled
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/nurbs++
pkglibdir = $(libdir)/nurbs++
pkgincludedir = $(includedir)/nurbs++
top_builddir = ../..

ACLOCAL = ${SHELL} /home/gmillet/Dep/nurbs++-3.0.11/missing --run aclocal-1.6
AUTOCONF = ${SHELL} /home/gmillet/Dep/nurbs++-3.0.11/missing --run autoconf
AUTOMAKE = ${SHELL} /home/gmillet/Dep/nurbs++-3.0.11/missing --run automake-1.6
AUTOHEADER = ${SHELL} /home/gmillet/Dep/nurbs++-3.0.11/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = 
build_triplet = x86_64-unknown-linux-gnu
host_alias = 
host_triplet = x86_64-unknown-linux-gnu
target_alias = 
target_triplet = x86_64-unknown-linux-gnu

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = ${SHELL} /home/gmillet/Dep/nurbs++-3.0.11/missing --run tar
AS = @AS@
AWK = gawk
CC = gcc
CPP = gcc -E
CPPUNIT_CPPFLAGS = 
CPPUNIT_LIBS = 
CXX = g++
DEPDIR = .deps
DLLTOOL = @DLLTOOL@
ECHO = echo
GL_CFLAGS = 
GL_LFLAGS = 
GL_LIBS = 
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
MAGICK_CPPFLAGS = 
MAGICK_LDFLAGS = 
MAGICK_LIBS = @magick_libs@ 
OBJDUMP = @OBJDUMP@
PACKAGE = nurbs++
RANLIB = ranlib
STRIP = strip
VERSION = 3.0.11
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
am__include = include
am__quote = 
ar = 
clean_list = 
complex_header = complex.h
complex_lib = 
has_cppunit = no
inside_mindseye = 
install_sh = /home/gmillet/Dep/nurbs++-3.0.11/install-sh
libcxx_flags = 
libld = 
libld_options = 
libs_inc = 
matrix_include = -I$(top_srcdir)/matrix -I$(top_srcdir)/image -I$(top_srcdir)/numerical
matrix_lib = -lmatrixN -lmatrixI -lmatrix
matrix_lib_flag = -L$(top_srcdir)/matrix -L$(top_srcdir)/image -L$(top_srcdir)/numerical
nurbs_demo_lib = 
nurbs_include = -I$(top_srcdir)/nurbs
nurbs_lib = $(packagedir)/nurbs/libnurbsf.la $(packagedir)/nurbs/libnurbsd.la
nurbs_libd = $(packagedir)/nurbs/libnurbsd.la
nurbs_libf = $(packagedir)/nurbs/libnurbsf.la
nurbs_libs = 
option_include = 
option_libs = 
packagedir = /home/gmillet/Dep/nurbs++-3.0.11
perl = /usr/bin/perl
EXTRA_DIST = tleastS.png

XINCLUDE = 
XLIBS =  -lSM -lICE  -lXt -lX11
MAGICK_INCLUDE = $(XINCLUDE) @magick_include@
MAGICK_LIB = @magick_lib@

COMPLEXLIB = 

MATRIX_INCLUDE = -I$(top_srcdir)/matrix -I$(top_srcdir)/image -I$(top_srcdir)/numerical
MATRIX_LIB_FLAG = -L$(top_srcdir)/matrix -L$(top_srcdir)/image -L$(top_srcdir)/numerical
MATRIXLIB = -L$(top_srcdir)/matrix -L$(top_srcdir)/image -L$(top_srcdir)/numerical -lmatrixN -lmatrixI -lmatrix 

OPENGL_LIBS = -lglut $(GL_LFLAGS) $(GL_LIBS) $(X_EXTRA_LIBS)

#INCLUDES = $(MAGICK_INCLUDE) $(GL_CFLAGS) -I$(top_srcdir)/matrix -I$(top_srcdir)/image -I$(top_srcdir)/numerical -I$(top_srcdir)/nurbs
INCLUDES = -I$(top_srcdir)/matrix -I$(top_srcdir)/image -I$(top_srcdir)/numerical -I$(top_srcdir)/nurbs 
#EXTRALIBS = -lm -lc
#ALLLIBS = $(packagedir)/nurbs/libnurbsf.la $(MATRIXLIB)  $(EXTRALIBS)
ALLLIBS = -lglut $(packagedir)/nurbs/libnurbsf.la $(MATRIXLIB) 

TESTS = tnurbs tnlength tnurbsS thnurbsS tnsSweep tmatrixRT tdrawAa  tnInterp tnApprox tnMovePoint tnsMovePoint topengl tleastS tnurbs_sp  tnurbsS_sp tclose tnurbsSub tmeasures trispline
noinst_PROGRAMS = tnurbs tnlength tnurbsS thnurbsS tnsSweep tmatrixRT tdrawAa  tnInterp tnApprox tnMovePoint tnsMovePoint topengl tleastS tnurbs_sp  tnurbsS_sp tclose tnurbsSub tmeasures  trispline 

LDADD = $(ALLLIBS)

#LDFLAGS = $(LIBSINC)
tnurbs_SOURCES = tnurbs.cpp
tnlength_SOURCES = tnlength.cpp
tnurbsS_SOURCES = tnurbsS.cpp
thnurbsS_SOURCES = thnurbsS.cpp
tnsSweep_SOURCES = tnsSweep.cpp
tmatrixRT_SOURCES = tmatrixRT.cpp
tdrawAa_SOURCES = tdrawAa.cpp
tnInterp_SOURCES = tnInterp.cpp
tnApprox_SOURCES = tnApprox.cpp
tnMovePoint_SOURCES = tnMovePoint.cpp
tnsMovePoint_SOURCES = tnsMovePoint.cpp
topengl_SOURCES = topengl.cpp
tleastS_SOURCES = tleastS.cpp
tnurbs_sp_SOURCES = tnurbs_sp.cpp
tnurbsS_sp_SOURCES = tnurbsS_sp.cpp
tclose_SOURCES = tclose.cpp
tnurbsSub_SOURCES = tnurbsSub.cpp
tmeasures_SOURCES = tmeasures.cpp
trispline_SOURCES = trispline.cpp
subdir = examples/nurbs
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/plib_config.h
CONFIG_CLEAN_FILES =
noinst_PROGRAMS = tnurbs$(EXEEXT) tnlength$(EXEEXT) tnurbsS$(EXEEXT) \
	thnurbsS$(EXEEXT) tnsSweep$(EXEEXT) tmatrixRT$(EXEEXT) \
	tdrawAa$(EXEEXT) tnInterp$(EXEEXT) tnApprox$(EXEEXT) \
	tnMovePoint$(EXEEXT) tnsMovePoint$(EXEEXT) topengl$(EXEEXT) \
	tleastS$(EXEEXT) tnurbs_sp$(EXEEXT) tnurbsS_sp$(EXEEXT) \
	tclose$(EXEEXT) tnurbsSub$(EXEEXT) tmeasures$(EXEEXT) \
	trispline$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

am_tclose_OBJECTS = tclose.$(OBJEXT)
tclose_OBJECTS = $(am_tclose_OBJECTS)
tclose_LDADD = $(LDADD)
tclose_DEPENDENCIES =
tclose_LDFLAGS =
am_tdrawAa_OBJECTS = tdrawAa.$(OBJEXT)
tdrawAa_OBJECTS = $(am_tdrawAa_OBJECTS)
tdrawAa_LDADD = $(LDADD)
tdrawAa_DEPENDENCIES =
tdrawAa_LDFLAGS =
am_thnurbsS_OBJECTS = thnurbsS.$(OBJEXT)
thnurbsS_OBJECTS = $(am_thnurbsS_OBJECTS)
thnurbsS_LDADD = $(LDADD)
thnurbsS_DEPENDENCIES =
thnurbsS_LDFLAGS =
am_tleastS_OBJECTS = tleastS.$(OBJEXT)
tleastS_OBJECTS = $(am_tleastS_OBJECTS)
tleastS_LDADD = $(LDADD)
tleastS_DEPENDENCIES =
tleastS_LDFLAGS =
am_tmatrixRT_OBJECTS = tmatrixRT.$(OBJEXT)
tmatrixRT_OBJECTS = $(am_tmatrixRT_OBJECTS)
tmatrixRT_LDADD = $(LDADD)
tmatrixRT_DEPENDENCIES =
tmatrixRT_LDFLAGS =
am_tmeasures_OBJECTS = tmeasures.$(OBJEXT)
tmeasures_OBJECTS = $(am_tmeasures_OBJECTS)
tmeasures_LDADD = $(LDADD)
tmeasures_DEPENDENCIES =
tmeasures_LDFLAGS =
am_tnApprox_OBJECTS = tnApprox.$(OBJEXT)
tnApprox_OBJECTS = $(am_tnApprox_OBJECTS)
tnApprox_LDADD = $(LDADD)
tnApprox_DEPENDENCIES =
tnApprox_LDFLAGS =
am_tnInterp_OBJECTS = tnInterp.$(OBJEXT)
tnInterp_OBJECTS = $(am_tnInterp_OBJECTS)
tnInterp_LDADD = $(LDADD)
tnInterp_DEPENDENCIES =
tnInterp_LDFLAGS =
am_tnMovePoint_OBJECTS = tnMovePoint.$(OBJEXT)
tnMovePoint_OBJECTS = $(am_tnMovePoint_OBJECTS)
tnMovePoint_LDADD = $(LDADD)
tnMovePoint_DEPENDENCIES =
tnMovePoint_LDFLAGS =
am_tnlength_OBJECTS = tnlength.$(OBJEXT)
tnlength_OBJECTS = $(am_tnlength_OBJECTS)
tnlength_LDADD = $(LDADD)
tnlength_DEPENDENCIES =
tnlength_LDFLAGS =
am_tnsMovePoint_OBJECTS = tnsMovePoint.$(OBJEXT)
tnsMovePoint_OBJECTS = $(am_tnsMovePoint_OBJECTS)
tnsMovePoint_LDADD = $(LDADD)
tnsMovePoint_DEPENDENCIES =
tnsMovePoint_LDFLAGS =
am_tnsSweep_OBJECTS = tnsSweep.$(OBJEXT)
tnsSweep_OBJECTS = $(am_tnsSweep_OBJECTS)
tnsSweep_LDADD = $(LDADD)
tnsSweep_DEPENDENCIES =
tnsSweep_LDFLAGS =
am_tnurbs_OBJECTS = tnurbs.$(OBJEXT)
tnurbs_OBJECTS = $(am_tnurbs_OBJECTS)
tnurbs_LDADD = $(LDADD)
tnurbs_DEPENDENCIES =
tnurbs_LDFLAGS =
am_tnurbsS_OBJECTS = tnurbsS.$(OBJEXT)
tnurbsS_OBJECTS = $(am_tnurbsS_OBJECTS)
tnurbsS_LDADD = $(LDADD)
tnurbsS_DEPENDENCIES =
tnurbsS_LDFLAGS =
am_tnurbsS_sp_OBJECTS = tnurbsS_sp.$(OBJEXT)
tnurbsS_sp_OBJECTS = $(am_tnurbsS_sp_OBJECTS)
tnurbsS_sp_LDADD = $(LDADD)
tnurbsS_sp_DEPENDENCIES =
tnurbsS_sp_LDFLAGS =
am_tnurbsSub_OBJECTS = tnurbsSub.$(OBJEXT)
tnurbsSub_OBJECTS = $(am_tnurbsSub_OBJECTS)
tnurbsSub_LDADD = $(LDADD)
tnurbsSub_DEPENDENCIES =
tnurbsSub_LDFLAGS =
am_tnurbs_sp_OBJECTS = tnurbs_sp.$(OBJEXT)
tnurbs_sp_OBJECTS = $(am_tnurbs_sp_OBJECTS)
tnurbs_sp_LDADD = $(LDADD)
tnurbs_sp_DEPENDENCIES =
tnurbs_sp_LDFLAGS =
am_topengl_OBJECTS = topengl.$(OBJEXT)
topengl_OBJECTS = $(am_topengl_OBJECTS)
topengl_LDADD = $(LDADD)
topengl_DEPENDENCIES =
topengl_LDFLAGS =
am_trispline_OBJECTS = trispline.$(OBJEXT)
trispline_OBJECTS = $(am_trispline_OBJECTS)
trispline_LDADD = $(LDADD)
trispline_DEPENDENCIES =
trispline_LDFLAGS =

DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/include
CPPFLAGS = 
LDFLAGS = 
LIBS = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/tclose.Po ./$(DEPDIR)/tdrawAa.Po \
	./$(DEPDIR)/thnurbsS.Po ./$(DEPDIR)/tleastS.Po \
	./$(DEPDIR)/tmatrixRT.Po ./$(DEPDIR)/tmeasures.Po \
	./$(DEPDIR)/tnApprox.Po ./$(DEPDIR)/tnInterp.Po \
	./$(DEPDIR)/tnMovePoint.Po ./$(DEPDIR)/tnlength.Po \
	./$(DEPDIR)/tnsMovePoint.Po ./$(DEPDIR)/tnsSweep.Po \
	./$(DEPDIR)/tnurbs.Po ./$(DEPDIR)/tnurbsS.Po \
	./$(DEPDIR)/tnurbsS_sp.Po ./$(DEPDIR)/tnurbsSub.Po \
	./$(DEPDIR)/tnurbs_sp.Po ./$(DEPDIR)/topengl.Po \
	./$(DEPDIR)/trispline.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = -O2 -fpermissive -fPIC -fno-implicit-templates
DIST_SOURCES = $(tclose_SOURCES) $(tdrawAa_SOURCES) $(thnurbsS_SOURCES) \
	$(tleastS_SOURCES) $(tmatrixRT_SOURCES) $(tmeasures_SOURCES) \
	$(tnApprox_SOURCES) $(tnInterp_SOURCES) $(tnMovePoint_SOURCES) \
	$(tnlength_SOURCES) $(tnsMovePoint_SOURCES) $(tnsSweep_SOURCES) \
	$(tnurbs_SOURCES) $(tnurbsS_SOURCES) $(tnurbsS_sp_SOURCES) \
	$(tnurbsSub_SOURCES) $(tnurbs_sp_SOURCES) $(topengl_SOURCES) \
	$(trispline_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(tclose_SOURCES) $(tdrawAa_SOURCES) $(thnurbsS_SOURCES) $(tleastS_SOURCES) $(tmatrixRT_SOURCES) $(tmeasures_SOURCES) $(tnApprox_SOURCES) $(tnInterp_SOURCES) $(tnMovePoint_SOURCES) $(tnlength_SOURCES) $(tnsMovePoint_SOURCES) $(tnsSweep_SOURCES) $(tnurbs_SOURCES) $(tnurbsS_SOURCES) $(tnurbsS_sp_SOURCES) $(tnurbsSub_SOURCES) $(tnurbs_sp_SOURCES) $(topengl_SOURCES) $(trispline_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  examples/nurbs/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
tclose$(EXEEXT): $(tclose_OBJECTS) $(tclose_DEPENDENCIES) 
	@rm -f tclose$(EXEEXT)
	$(CXXLINK) $(tclose_LDFLAGS) $(tclose_OBJECTS) $(tclose_LDADD) $(LIBS)
tdrawAa$(EXEEXT): $(tdrawAa_OBJECTS) $(tdrawAa_DEPENDENCIES) 
	@rm -f tdrawAa$(EXEEXT)
	$(CXXLINK) $(tdrawAa_LDFLAGS) $(tdrawAa_OBJECTS) $(tdrawAa_LDADD) $(LIBS)
thnurbsS$(EXEEXT): $(thnurbsS_OBJECTS) $(thnurbsS_DEPENDENCIES) 
	@rm -f thnurbsS$(EXEEXT)
	$(CXXLINK) $(thnurbsS_LDFLAGS) $(thnurbsS_OBJECTS) $(thnurbsS_LDADD) $(LIBS)
tleastS$(EXEEXT): $(tleastS_OBJECTS) $(tleastS_DEPENDENCIES) 
	@rm -f tleastS$(EXEEXT)
	$(CXXLINK) $(tleastS_LDFLAGS) $(tleastS_OBJECTS) $(tleastS_LDADD) $(LIBS)
tmatrixRT$(EXEEXT): $(tmatrixRT_OBJECTS) $(tmatrixRT_DEPENDENCIES) 
	@rm -f tmatrixRT$(EXEEXT)
	$(CXXLINK) $(tmatrixRT_LDFLAGS) $(tmatrixRT_OBJECTS) $(tmatrixRT_LDADD) $(LIBS)
tmeasures$(EXEEXT): $(tmeasures_OBJECTS) $(tmeasures_DEPENDENCIES) 
	@rm -f tmeasures$(EXEEXT)
	$(CXXLINK) $(tmeasures_LDFLAGS) $(tmeasures_OBJECTS) $(tmeasures_LDADD) $(LIBS)
tnApprox$(EXEEXT): $(tnApprox_OBJECTS) $(tnApprox_DEPENDENCIES) 
	@rm -f tnApprox$(EXEEXT)
	$(CXXLINK) $(tnApprox_LDFLAGS) $(tnApprox_OBJECTS) $(tnApprox_LDADD) $(LIBS)
tnInterp$(EXEEXT): $(tnInterp_OBJECTS) $(tnInterp_DEPENDENCIES) 
	@rm -f tnInterp$(EXEEXT)
	$(CXXLINK) $(tnInterp_LDFLAGS) $(tnInterp_OBJECTS) $(tnInterp_LDADD) $(LIBS)
tnMovePoint$(EXEEXT): $(tnMovePoint_OBJECTS) $(tnMovePoint_DEPENDENCIES) 
	@rm -f tnMovePoint$(EXEEXT)
	$(CXXLINK) $(tnMovePoint_LDFLAGS) $(tnMovePoint_OBJECTS) $(tnMovePoint_LDADD) $(LIBS)
tnlength$(EXEEXT): $(tnlength_OBJECTS) $(tnlength_DEPENDENCIES) 
	@rm -f tnlength$(EXEEXT)
	$(CXXLINK) $(tnlength_LDFLAGS) $(tnlength_OBJECTS) $(tnlength_LDADD) $(LIBS)
tnsMovePoint$(EXEEXT): $(tnsMovePoint_OBJECTS) $(tnsMovePoint_DEPENDENCIES) 
	@rm -f tnsMovePoint$(EXEEXT)
	$(CXXLINK) $(tnsMovePoint_LDFLAGS) $(tnsMovePoint_OBJECTS) $(tnsMovePoint_LDADD) $(LIBS)
tnsSweep$(EXEEXT): $(tnsSweep_OBJECTS) $(tnsSweep_DEPENDENCIES) 
	@rm -f tnsSweep$(EXEEXT)
	$(CXXLINK) $(tnsSweep_LDFLAGS) $(tnsSweep_OBJECTS) $(tnsSweep_LDADD) $(LIBS)
tnurbs$(EXEEXT): $(tnurbs_OBJECTS) $(tnurbs_DEPENDENCIES) 
	@rm -f tnurbs$(EXEEXT)
	$(CXXLINK) $(tnurbs_LDFLAGS) $(tnurbs_OBJECTS) $(tnurbs_LDADD) $(LIBS)
tnurbsS$(EXEEXT): $(tnurbsS_OBJECTS) $(tnurbsS_DEPENDENCIES) 
	@rm -f tnurbsS$(EXEEXT)
	$(CXXLINK) $(tnurbsS_LDFLAGS) $(tnurbsS_OBJECTS) $(tnurbsS_LDADD) $(LIBS)
tnurbsS_sp$(EXEEXT): $(tnurbsS_sp_OBJECTS) $(tnurbsS_sp_DEPENDENCIES) 
	@rm -f tnurbsS_sp$(EXEEXT)
	$(CXXLINK) $(tnurbsS_sp_LDFLAGS) $(tnurbsS_sp_OBJECTS) $(tnurbsS_sp_LDADD) $(LIBS)
tnurbsSub$(EXEEXT): $(tnurbsSub_OBJECTS) $(tnurbsSub_DEPENDENCIES) 
	@rm -f tnurbsSub$(EXEEXT)
	$(CXXLINK) $(tnurbsSub_LDFLAGS) $(tnurbsSub_OBJECTS) $(tnurbsSub_LDADD) $(LIBS)
tnurbs_sp$(EXEEXT): $(tnurbs_sp_OBJECTS) $(tnurbs_sp_DEPENDENCIES) 
	@rm -f tnurbs_sp$(EXEEXT)
	$(CXXLINK) $(tnurbs_sp_LDFLAGS) $(tnurbs_sp_OBJECTS) $(tnurbs_sp_LDADD) $(LIBS)
topengl$(EXEEXT): $(topengl_OBJECTS) $(topengl_DEPENDENCIES) 
	@rm -f topengl$(EXEEXT)
	$(CXXLINK) $(topengl_LDFLAGS) $(topengl_OBJECTS) $(topengl_LDADD) $(LIBS)
trispline$(EXEEXT): $(trispline_OBJECTS) $(trispline_DEPENDENCIES) 
	@rm -f trispline$(EXEEXT)
	$(CXXLINK) $(trispline_LDFLAGS) $(trispline_OBJECTS) $(trispline_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/tclose.Po
include ./$(DEPDIR)/tdrawAa.Po
include ./$(DEPDIR)/thnurbsS.Po
include ./$(DEPDIR)/tleastS.Po
include ./$(DEPDIR)/tmatrixRT.Po
include ./$(DEPDIR)/tmeasures.Po
include ./$(DEPDIR)/tnApprox.Po
include ./$(DEPDIR)/tnInterp.Po
include ./$(DEPDIR)/tnMovePoint.Po
include ./$(DEPDIR)/tnlength.Po
include ./$(DEPDIR)/tnsMovePoint.Po
include ./$(DEPDIR)/tnsSweep.Po
include ./$(DEPDIR)/tnurbs.Po
include ./$(DEPDIR)/tnurbsS.Po
include ./$(DEPDIR)/tnurbsS_sp.Po
include ./$(DEPDIR)/tnurbsSub.Po
include ./$(DEPDIR)/tnurbs_sp.Po
include ./$(DEPDIR)/topengl.Po
include ./$(DEPDIR)/trispline.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CXXDEPMODE) $(depcomp) \
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CXXDEPMODE = depmode=gcc3

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes=`echo "$$banner" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES) stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-TESTS check-am clean clean-generic \
	clean-libtool clean-noinstPROGRAMS distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	tags uninstall uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
